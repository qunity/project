#!/usr/bin/env bash
# shellcheck source=./.qunity/[*/]*.sh

set -o nounset -o errexit

readonly VERSION="v4.0.0-dev"
readonly SCRIPT="./$(basename "$0")"
readonly BASE_DIR="$(realpath "$(dirname "$0")")"
readonly QUNITY_DIR="${BASE_DIR}/.qunity"

if [[ -f "${BASE_DIR}/.env" ]]; then source "${BASE_DIR}/.env"; fi
if [[ -f "${QUNITY_DIR}/.env" ]]; then source "${QUNITY_DIR}/.env"; fi

color() { echo -n "\033[${1}m${*:2}\033[0m"; }; print() { echo -e "$(date +'%T') ${*}"; }
help:string() { printf "%${3-4}s%$(( ${4-30} * -1 ))s%s\n" "" "$1" "${2-}"; }

help:commands() { local CMD_DIR="${QUNITY_DIR}/command" SUB="" FILE; while read -r FILE; do
  unset "NAME" "DESK"; source "$FILE"; NAME="${NAME-"$(basename "$FILE")"}" DESK="- ${DESK-"..."}"
  if [[ -d "${CMD_DIR}/${NAME//:/\/}" ]]; then echo; SUB="true"; elif [[ -n "$SUB" ]]; then echo; SUB=""; fi
  help:string "$NAME" "$DESK" "${2-4}" "${3-30}"
  if [[ -n "$SUB" ]]; then help:commands "$NAME" "$(( ${2-4} + 2 ))" "$(( ${3-30} - 2 ))"; fi
done < <(ls "${CMD_DIR}/${1//:/\/}"/*.sh 2> /dev/null); }

arg:has() { local ARG; for ARG in "${@:2}"; do
  if [[ "$ARG" == "${1%%:*}" || "$ARG" == "${1##*:}" ]]; then return 0; fi
done; return 1; }

arg:get() { local RESULT=() ARG; for ARG in "${@:2}"; do if [[ -z "${SEARCH-}" ]]; then
  if [[ "$ARG" == "${1%%:*}" || "$ARG" == "${1##*:}" ]]; then local SEARCH="true"; fi; continue; fi
  if [[ "$ARG" == -* ]]; then break; fi; RESULT[(( ${#RESULT[@]} + 1 ))]="$ARG"
done; echo "${RESULT[@]}"; }

# shellcheck disable=SC2086
load() { if [[ $# -eq 0 ]]; then local ARGS; read -ra ARGS
  if ${FUNCNAME[0]} "${ARGS[@]}"; then return 0; fi; return 1; fi
  local ARG; for ARG in "$@"; do source "${QUNITY_DIR}"/${ARG//:/\/*}.sh
done; }

?() { eval "$*"; }; execute() { local ARGS=( "$@" ) EXEC=( "$*" ) CALL
  if ! load "command:${ARGS[0]-none}" 2> /dev/null; then EXEC=( "? ${EXEC[*]}" ); fi
  if [[ $# -eq 0 ]] || arg:has "-h:--help" "${ARGS[@]}"; then echo -e "${HELP[@]}"; return 0; fi
for CALL in "${EXEC[@]}"; do eval "$CALL"; done; }

HELP="$(color 32 "Qunity ${VERSION}")\n
$(color 33 "Usage:")\n$(help:string "${SCRIPT} [command] [options] [arguments]")\n
$(color 33 "Options:")\n$(help:string "-h, --help" "- Display this help menu")\n
$(color 33 "Commands:")\n$(help:commands "./")"

execute "$@"
